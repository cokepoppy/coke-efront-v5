version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: efront-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: efront
      MYSQL_USER: efront
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-efrontpassword}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - efront-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis (optional, for caching)
  redis:
    image: redis:7-alpine
    container_name: efront-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - efront-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: efront-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: mysql://efront:${MYSQL_PASSWORD:-efrontpassword}@mysql:3306/efront
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-me}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-super-secret-refresh-key-change-me}
      FRONTEND_URL: http://localhost
      REDIS_URL: redis://redis:6379
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - efront-network
    volumes:
      - ./backend/uploads:/app/uploads

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: efront-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3000/api/v1
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - efront-network

volumes:
  mysql_data:
  redis_data:

networks:
  efront-network:
    driver: bridge
